library ieee;						-- Library declaration
use ieee.std_logic_1164.all;	-- Use std_logic_1164 package from ieee library
use ieee.numeric_std.all;

entity LED_INDICATOR is -- Entity declaration
port(CLK : in std_logic; -- Clock input of the FSM
RSTN : in std_logic; -- Active low reset input
L_TURN : in std_logic; -- Active high input for left turn
R_TURN : in std_logic; -- Active high input for right turn
HAZ : in std_logic; -- Active hifh input for hazard indication
LA, LB, LC, LD : out std_logic; -- Indicators for left turn
RA, RB, RC, RD : out std_logic); -- Indicators for right turn
end LED_INDICATOR;

architecture FUNCTIONALITY of LED_INDICATOR is


	signal CLK1 : std_logic := '0';								-- 3 Hz clock which needs to be derived
	signal CNT0 : integer range 0 to 1667 := 0;			-- Internal counter to generate 3 Hz from 10KHz

	type STATE_TYPE is (S0, S1, S2, S3, S4, S5, S6, IDLE);
	signal Q, QPLUS : STATE_TYPE;
	begin

	process(CLK) begin											-- Process which is sensitive to CLK
		if rising_edge(CLK) then								-- to generate 10Hz CLK1
			if(CNT0 = 1667) then
				CNT0 <= 0;
				CLK1 <= not CLK1;
			else
				CNT0 <= CNT0 + 1;
			end if;
		end if;
	end process;
	